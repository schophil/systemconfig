# Simple tools
snippet main
	public static void main(String[] args) {
		${0}
	}
snippet print
	System.out.println(${0});
snippet for
	for (${0}) {
	}
snippet package
	package `substitute(substitute(substitute(expand('%:h'), '/', '.', 'g'), 'src.main.java.', '', ''), 'src.test.java.', '', '')`;
snippet runtime
	throw new RuntimeException(${1:e});
snippet path
	FileSystems.getDefault().getPath(${0});
snippet resource
	String resource = ClassLoader.getSystemResource(${0}).getPath();
snippet print
	System.out.println(${0});
# Methods
snippet pm
	public ${1:void} ${2:foo}(${3}) {
		${0}
	}
# Annotations
snippet over
	@Override
# Types
snippet class
	/**
	 * @author `$USER`
	 * @since `strftime("%Y-%m-%d")`
	 */
	public class ${1:`Filename()`} {
		${0}
	}
snippet interface
	/**
	 * @author `$USER`
	 * @since `strftime("%Y-%m-%d")`
	 */
	public interface ${1:`Filename()`} {
		${0}
	}
snippet enum
	/**
	 * @author `$USER`
	 * @since `strftime("%Y-%m-%d")`
	 */
	public enum ${1:`Filename()`} {
		${0}
	}
# Testing tools
snippet test
	@Test
	public void ${1}Test() {
		${0}
	}
# JPA
snippet entity
	import java.util.UUID;
	import javax.persistence.Entity;
	import javax.persistence.Id;
	import javax.persistence.GeneratedValue;
	import javax.validation.constraints.NotNull;

	import lombok.Data;

	/**
	 * @author `$USER`
	 * @since `strftime("%Y-%m-%d")`
	 */
	@Data
	@Entity
	public class ${1:`Filename()`} {

	    @Id
	    @GeneratedValue
	    private UUID id;
	    @NotNull
	    private String key;
	    @NotNull
	    private String value;
	}
