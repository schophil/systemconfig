" File: vimrc
" Author: Philippe Schottey
"
" Use Vim settings, rather than Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

" activate pathogen plugin loader
execute pathogen#infect()

" set preferred colors
set t_Co=256
colorscheme monotonic
syntax on
set cursorline
hi CursorLineNr cterm=none ctermfg=yellow
hi Constant cterm=none ctermfg=lightblue
hi IncSearch cterm=none ctermbg=red
hi MatchParen ctermfg=darkblue ctermbg=white
hi StatusLine ctermfg=lightred

" General settings
" 
" allow backspacing over everything in insert mode
set backspace=indent,eol,start
" keep a backup file (restore to previous version)
set backup
" keep an undo file (undo changes after closing)
set undofile
" keep 50 lines of command line history
set history=50
" show the cursor position all the time
set ruler
" display incomplete commands
set showcmd
" do incremental searching
set incsearch
" show line numbers in gutter
set nu
" show relative line numbers
set relativenumber
" highlight search results
set hlsearch

set listchars=tab:>~,nbsp:_,trail:.
set list

" Set statusline
set laststatus=2
set statusline=(%n)\ %.20f\ %y\ [%{GetFileEncoding()}]\ [%{GetFileFormat()}]\ %m
set statusline+=%=
set statusline+=
set statusline+=%c:%l\ (%L)
set statusline+=\ %P

function! GetFileEncoding()
	return &fileencoding
endfunction

function! GetFileFormat()
	return &fileformat
endfunction

if has("autocmd")
  " Enable file type detection.
  " Use the default filetype settings, so that mail gets 'tw' set to 72,
  " 'cindent' is on in C files, etc.
  " Also load indent files, to automatically do language-dependent indenting.
  filetype plugin indent on
  " ...
endif

" Plugin syntastic settings
"
let g:syntastic_mode_map = { "mode": "passive", "active_filetypes": [], "passive_filetypes": ["java"] }
" set statusline+=%#warningmsg#
" set statusline+=%{SyntasticStatuslineFlag()}
" set statusline+=%*
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
" Only check synatax on write. This was mostly done to allow switching buffers
" faster when developping in Java. 
let g:syntastic_check_on_open = 0
let g:syntastic_check_on_wq = 1
" Settings for java
" let g:syntastic_java_checkers=['javac']
" Use a file named syntastic_javac_config to determine the classpath to use
" let g:syntastic_java_javac_config_file_enabled = 1
let g:syntastic_ignore_files = ['*.java']

" Plugin ctrl-p settings
"
let g:ctrlp_max_files=20000
let g:ctrlp_custom_ignore='.*(\.git\|\.hg\|\.svn\|\~\|target\|node_modules\|build\|\.class\|bin)$'
let g:ctrlp_root_markers = ['ivy.xml', 'build.gradle']
let g:ctrlp_show_hidden = 1

" Key mappings
"
" Remap the leader to ,
let mapleader = ","
" Remap keys to switch buffers faster:
" Go to previous buffer
nnoremap <C-s> :bprevious<CR>
" Go to next buffer
nnoremap <C-c> :bnext<CR>
" Toggle NERDTree
nnoremap <Leader>t :NERDTreeToggle<CR> 
" Toggle syntastic validation/output
nnoremap <Leader>s :SyntasticToggleMode<CR>
" Mappings to resize panes 
nnoremap <Leader>ss :vertical resize -4<CR>
nnoremap <Leader>ww :vertical resize +4<CR>
" Copy to the macOS registry
vnoremap <Leader>k :w !pbcopy<CR><CR>
" Shortcut to edit the vimrc
nnoremap <leader>ev :vsplit $MYVIMRC<cr>
" Shortcut to source the vimrc
nnoremap <leader>sv :source $MYVIMRC<cr>
nnoremap <C-b> :CtrlPBuffer<cr>
" Deactivate the arrows
map <Down> <Nop>
map <Up> <Nop>
map <Left> <Nop>
map <Right> <Nop>
imap <Down> <Nop>
imap <Up> <Nop>
imap <Left> <Nop>
imap <Right> <Nop>

" Excercises
" nmap - ddp
" nnoremap _ dd2kp
" inoremap <c-u> <esc>viwUi
" inoremap { {}<esc>i
iabbrev @@ schophil@icloud.com
iabbrev ps Philippe Schottey
hi ColorColumn ctermbg=magenta
call matchadd('ColorColumn', '\%81v', 100)

" Snipmate plugin func {}
"
let g:snipMate = {}
" Force parse version to 1 
let g:snipMate.snippet_version = 1

" File types
"
autocmd BufReadPost *.conf set syntax=conf

" Java oriented tools
" Shortcut to edit the Java snippets
augroup filetype_java
	autocmd!
	autocmd FileType java nnoremap <buffer> <leader>es :vsplit ~/.vim/snippets/java.snippets<cr>
	autocmd FileType java nnoremap <buffer> <leader>jf :normal! ma^ifinal `ama
augroup end
